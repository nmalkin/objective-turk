#!/usr/bin/env python

"""
Assign the GDMS qualification to everyone in the provided file,
checking first that they don't have it already
"""

import sys

import xmltodict

import turk_common
import logger

def get_qualifications(qualification_id):
    page = 1
    results_available = True
    while results_available:
        response = turk_common.turk.request('GetQualificationsForQualificationType', {
                'Operation': 'GetQualificationsForQualificationType',
                'QualificationTypeId': qualification_id,
                'Status': 'Granted',
                'PageNumber': page})

        result = response['GetQualificationsForQualificationTypeResponse']['GetQualificationsForQualificationTypeResult']
        logger.debug(result)
        num_results = int(result['NumResults'])
        results_available = num_results > 0

        if results_available:
            qualifications = result['Qualification']
            if num_results == 1:
                yield qualifications
            else:
                for qualification in qualifications:
                    yield qualification

        page += 1

def assign_qualification(qualification, worker):
    logger.info('assigning qualification %s to %s' % (qualification, worker))
    response = turk_common.turk.request('AssignQualification', {
            'Operation': 'AssignQualification',
            'QualificationTypeId': qualification,
            'WorkerId': worker,
            'SendNotification': 'false'})

    logger.debug(response)
    assert response['AssignQualificationResponse']['AssignQualificationResult']['Request']['IsValid'] == 'True'
    return response

def worker_id_from_assignments(assignments):
    for assignment in assignments:
        yield assignment['WorkerId']

def workers_with_qualifications(qualifications):
    workers = set()
    for qualification in qualifications:
        workers.add(qualification['SubjectId'])
    return workers

def main(worker_filename, qualification):
    logger.info('=== assign_qualification_gdms ===')
    def qualify(worker):
        return assign_qualification(qualification, worker)

    qualifications = get_qualifications(qualification)
    already_granted = workers_with_qualifications(qualifications)

    with open(worker_filename, 'r') as f:
        workers = {line.strip() for line in f.readlines()}
        logger.debug('all workers: %s' % workers)

    new_workers = workers - already_granted
    logger.debug('workers without qualifications: %s' % new_workers)

    turk_common.repeat_with_confirmation(qualify, new_workers)

if __name__ == '__main__':
    if len(sys.argv) < 3:
        logger.critical('usage: %s worker_filename qualification_id' % sys.argv[0])
        sys.exit(1)

    worker_filename = sys.argv[1]
    qualification = sys.argv[2]

    main(worker_filename, qualification)
